// <auto-generated />
using System;
using Farm_ASPCore_Webapi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Farm_ASPCore_Webapi.Migrations
{
    [DbContext(typeof(FarmDbContext))]
    [Migration("20190111163905_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Cultivation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("FarmId");

                    b.Property<int>("Grain");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Cultivations");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Cultivation");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Farms");

                    b.HasData(
                        new { Id = 1, Name = "Farm" }
                    );
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DaysOfWork");

                    b.Property<int>("FarmId");

                    b.Property<int>("HoursPerDay");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Stable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FarmId");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Stables");

                    b.HasData(
                        new { Id = 1, FarmId = 1 }
                    );
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BaseSalary");

                    b.Property<int>("DaysOfWork");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<DateTime>("EndOfContract");

                    b.Property<int>("FarmId");

                    b.Property<string>("FirstName");

                    b.Property<int>("HoursPerDay");

                    b.Property<int>("Kind");

                    b.Property<string>("LastName");

                    b.Property<double>("Salary");

                    b.Property<DateTime>("StartOfContract");

                    b.Property<double>("UsdPerHour");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Workers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Worker");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.CultivationComposite", b =>
                {
                    b.HasBaseType("Farm_ASPCore_Webapi.Models.Cultivation");


                    b.ToTable("CultivationComposite");

                    b.HasDiscriminator().HasValue("CultivationComposite");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.CultivationLeaf", b =>
                {
                    b.HasBaseType("Farm_ASPCore_Webapi.Models.Cultivation");

                    b.Property<int?>("ParentId");

                    b.HasIndex("ParentId");

                    b.ToTable("CultivationLeaf");

                    b.HasDiscriminator().HasValue("CultivationLeaf");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Driver", b =>
                {
                    b.HasBaseType("Farm_ASPCore_Webapi.Models.Worker");


                    b.ToTable("Driver");

                    b.HasDiscriminator().HasValue("Driver");

                    b.HasData(
                        new { Id = 1, BaseSalary = 1717.0, DaysOfWork = 16, EndOfContract = new DateTime(2016, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name0", HoursPerDay = 7, Kind = 0, LastName = "lastname0", Salary = 1717.0, StartOfContract = new DateTime(2017, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 12.25 },
                        new { Id = 2, BaseSalary = 356.93, DaysOfWork = 1, EndOfContract = new DateTime(2016, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name1", HoursPerDay = 1, Kind = 0, LastName = "lastname1", Salary = 356.93, StartOfContract = new DateTime(2017, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 11.93 },
                        new { Id = 3, BaseSalary = 1803.73, DaysOfWork = 13, EndOfContract = new DateTime(2015, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name2", HoursPerDay = 7, Kind = 0, LastName = "lastname2", Salary = 1803.73, StartOfContract = new DateTime(2015, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 16.03 },
                        new { Id = 4, BaseSalary = 3800.76, DaysOfWork = 28, EndOfContract = new DateTime(2016, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name3", HoursPerDay = 11, Kind = 0, LastName = "lastname3", Salary = 3800.76, StartOfContract = new DateTime(2017, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 11.22 },
                        new { Id = 5, BaseSalary = 352.46, DaysOfWork = 1, EndOfContract = new DateTime(2017, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name4", HoursPerDay = 1, Kind = 0, LastName = "lastname4", Salary = 352.46, StartOfContract = new DateTime(2016, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.46 },
                        new { Id = 6, BaseSalary = 1163.09, DaysOfWork = 29, EndOfContract = new DateTime(2016, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name5", HoursPerDay = 13, Kind = 0, LastName = "lastname5", Salary = 1163.0900000000001, StartOfContract = new DateTime(2015, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 2.17 },
                        new { Id = 7, BaseSalary = 593.4, DaysOfWork = 5, EndOfContract = new DateTime(2015, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name6", HoursPerDay = 12, Kind = 0, LastName = "lastname6", Salary = 593.4, StartOfContract = new DateTime(2015, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 4.14 },
                        new { Id = 8, BaseSalary = 895.2, DaysOfWork = 3, EndOfContract = new DateTime(2016, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name7", HoursPerDay = 20, Kind = 0, LastName = "lastname7", Salary = 895.2, StartOfContract = new DateTime(2016, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 9.17 },
                        new { Id = 9, BaseSalary = 815.4, DaysOfWork = 28, EndOfContract = new DateTime(2016, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name8", HoursPerDay = 7, Kind = 0, LastName = "lastname8", Salary = 815.40000000000009, StartOfContract = new DateTime(2015, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 2.4 },
                        new { Id = 10, BaseSalary = 517.8, DaysOfWork = 8, EndOfContract = new DateTime(2015, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name9", HoursPerDay = 8, Kind = 0, LastName = "lastname9", Salary = 517.8, StartOfContract = new DateTime(2017, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 2.7 }
                    );
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Farmer", b =>
                {
                    b.HasBaseType("Farm_ASPCore_Webapi.Models.Worker");


                    b.ToTable("Farmer");

                    b.HasDiscriminator().HasValue("Farmer");

                    b.HasData(
                        new { Id = 11, BaseSalary = 1373.25, DaysOfWork = 15, EndOfContract = new DateTime(2017, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name10", HoursPerDay = 5, Kind = 1, LastName = "lastname10", Salary = 1373.25, StartOfContract = new DateTime(2017, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 10.31 },
                        new { Id = 12, BaseSalary = 1480.5, DaysOfWork = 5, EndOfContract = new DateTime(2017, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name11", HoursPerDay = 10, Kind = 1, LastName = "lastname11", Salary = 1480.5, StartOfContract = new DateTime(2017, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 17.61 },
                        new { Id = 13, BaseSalary = 779.04, DaysOfWork = 6, EndOfContract = new DateTime(2016, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name12", HoursPerDay = 4, Kind = 1, LastName = "lastname12", Salary = 779.04, StartOfContract = new DateTime(2017, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.46 },
                        new { Id = 14, BaseSalary = 2385.42, DaysOfWork = 18, EndOfContract = new DateTime(2015, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name13", HoursPerDay = 13, Kind = 1, LastName = "lastname13", Salary = 2385.42, StartOfContract = new DateTime(2016, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.63 },
                        new { Id = 15, BaseSalary = 847.59, DaysOfWork = 3, EndOfContract = new DateTime(2016, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name14", HoursPerDay = 7, Kind = 1, LastName = "lastname14", Salary = 847.59, StartOfContract = new DateTime(2016, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 11.79 },
                        new { Id = 16, BaseSalary = 1446.9, DaysOfWork = 15, EndOfContract = new DateTime(2017, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name15", HoursPerDay = 6, Kind = 1, LastName = "lastname15", Salary = 1446.9, StartOfContract = new DateTime(2015, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 9.41 },
                        new { Id = 17, BaseSalary = 2851.26, DaysOfWork = 11, EndOfContract = new DateTime(2015, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name16", HoursPerDay = 18, Kind = 1, LastName = "lastname16", Salary = 2851.2599999999998, StartOfContract = new DateTime(2015, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 11.37 },
                        new { Id = 18, BaseSalary = 1884.14, DaysOfWork = 26, EndOfContract = new DateTime(2015, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name17", HoursPerDay = 11, Kind = 1, LastName = "lastname17", Salary = 1884.14, StartOfContract = new DateTime(2015, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 4.49 },
                        new { Id = 19, BaseSalary = 10119.93, DaysOfWork = 27, EndOfContract = new DateTime(2017, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name18", HoursPerDay = 21, Kind = 1, LastName = "lastname18", Salary = 10119.929999999998, StartOfContract = new DateTime(2015, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 16.79 },
                        new { Id = 20, BaseSalary = 616.38, DaysOfWork = 21, EndOfContract = new DateTime(2017, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name19", HoursPerDay = 6, Kind = 1, LastName = "lastname19", Salary = 616.38, StartOfContract = new DateTime(2016, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 0.13 }
                    );
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Cultivation", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Farm", "Farm")
                        .WithMany("Cultivations")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Machine", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Farm", "Farm")
                        .WithMany("Machines")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Stable", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Farm", "Farm")
                        .WithMany("Stables")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Worker", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Farm", "Farm")
                        .WithMany("Workers")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.CultivationLeaf", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Cultivation", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
