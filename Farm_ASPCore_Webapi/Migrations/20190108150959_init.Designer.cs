// <auto-generated />
using System;
using Farm_ASPCore_Webapi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Farm_ASPCore_Webapi.Migrations
{
    [DbContext(typeof(FarmDbContext))]
    [Migration("20190108150959_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Farms");

                    b.HasData(
                        new { Id = 1, Name = "Farm" }
                    );
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FarmId");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Stable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FarmId");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Stables");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BaseSalary");

                    b.Property<int>("DaysOfWork");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<DateTime>("EndOfContract");

                    b.Property<int>("FarmId");

                    b.Property<string>("FirstName");

                    b.Property<int>("HoursPerDay");

                    b.Property<string>("LastName");

                    b.Property<double>("Salary");

                    b.Property<DateTime>("StartOfContract");

                    b.Property<double>("UsdPerHour");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Workers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Worker");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Driver", b =>
                {
                    b.HasBaseType("Farm_ASPCore_Webapi.Models.Worker");


                    b.ToTable("Driver");

                    b.HasDiscriminator().HasValue("Driver");

                    b.HasData(
                        new { Id = 1, BaseSalary = 0.0, DaysOfWork = 31, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name0", HoursPerDay = 8, LastName = "lastname0", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.2 },
                        new { Id = 2, BaseSalary = 0.0, DaysOfWork = 31, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name1", HoursPerDay = 8, LastName = "lastname1", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.2 },
                        new { Id = 3, BaseSalary = 0.0, DaysOfWork = 31, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name2", HoursPerDay = 8, LastName = "lastname2", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.2 },
                        new { Id = 4, BaseSalary = 0.0, DaysOfWork = 31, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name3", HoursPerDay = 8, LastName = "lastname3", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.2 },
                        new { Id = 5, BaseSalary = 0.0, DaysOfWork = 31, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name4", HoursPerDay = 8, LastName = "lastname4", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.2 },
                        new { Id = 6, BaseSalary = 0.0, DaysOfWork = 31, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name5", HoursPerDay = 8, LastName = "lastname5", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.2 },
                        new { Id = 7, BaseSalary = 0.0, DaysOfWork = 31, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name6", HoursPerDay = 8, LastName = "lastname6", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.2 },
                        new { Id = 8, BaseSalary = 0.0, DaysOfWork = 31, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name7", HoursPerDay = 8, LastName = "lastname7", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.2 },
                        new { Id = 9, BaseSalary = 0.0, DaysOfWork = 31, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name8", HoursPerDay = 8, LastName = "lastname8", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.2 },
                        new { Id = 10, BaseSalary = 0.0, DaysOfWork = 31, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name9", HoursPerDay = 8, LastName = "lastname9", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.2 }
                    );
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Farmer", b =>
                {
                    b.HasBaseType("Farm_ASPCore_Webapi.Models.Worker");


                    b.ToTable("Farmer");

                    b.HasDiscriminator().HasValue("Farmer");

                    b.HasData(
                        new { Id = 11, BaseSalary = -2000.0, DaysOfWork = 29, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name10", HoursPerDay = 7, LastName = "lastname10", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 29.1 },
                        new { Id = 12, BaseSalary = -2000.0, DaysOfWork = 29, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name11", HoursPerDay = 7, LastName = "lastname11", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 29.1 },
                        new { Id = 13, BaseSalary = -2000.0, DaysOfWork = 29, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name12", HoursPerDay = 7, LastName = "lastname12", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 29.1 },
                        new { Id = 14, BaseSalary = -2000.0, DaysOfWork = 29, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name13", HoursPerDay = 7, LastName = "lastname13", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 29.1 },
                        new { Id = 15, BaseSalary = -2000.0, DaysOfWork = 29, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name14", HoursPerDay = 7, LastName = "lastname14", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 29.1 },
                        new { Id = 16, BaseSalary = -2000.0, DaysOfWork = 29, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name15", HoursPerDay = 7, LastName = "lastname15", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 29.1 },
                        new { Id = 17, BaseSalary = -2000.0, DaysOfWork = 29, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name16", HoursPerDay = 7, LastName = "lastname16", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 29.1 },
                        new { Id = 18, BaseSalary = -2000.0, DaysOfWork = 29, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name17", HoursPerDay = 7, LastName = "lastname17", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 29.1 },
                        new { Id = 19, BaseSalary = -2000.0, DaysOfWork = 29, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name18", HoursPerDay = 7, LastName = "lastname18", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 29.1 },
                        new { Id = 20, BaseSalary = -2000.0, DaysOfWork = 29, EndOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name19", HoursPerDay = 7, LastName = "lastname19", Salary = 0.0, StartOfContract = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 29.1 }
                    );
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Machine", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Farm", "Farm")
                        .WithMany("Machines")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Stable", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Farm", "Farm")
                        .WithMany("Stables")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Worker", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Farm", "Farm")
                        .WithMany("Workers")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
