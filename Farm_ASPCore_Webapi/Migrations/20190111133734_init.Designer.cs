// <auto-generated />
using System;
using Farm_ASPCore_Webapi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Farm_ASPCore_Webapi.Migrations
{
    [DbContext(typeof(FarmDbContext))]
    [Migration("20190111133734_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Cultivation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int?>("FarmId1");

                    b.Property<int>("Grain");

                    b.HasKey("Id");

                    b.HasIndex("FarmId1");

                    b.ToTable("Cultivations");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Cultivation");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Farms");

                    b.HasData(
                        new { Id = 1, Name = "Farm" }
                    );
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DaysOfWork");

                    b.Property<int>("FarmId");

                    b.Property<int>("HoursPerDay");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Stable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FarmId");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Stables");

                    b.HasData(
                        new { Id = 1, FarmId = 1 }
                    );
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BaseSalary");

                    b.Property<int>("DaysOfWork");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<DateTime>("EndOfContract");

                    b.Property<int>("FarmId");

                    b.Property<string>("FirstName");

                    b.Property<int>("HoursPerDay");

                    b.Property<int>("Kind");

                    b.Property<string>("LastName");

                    b.Property<double>("Salary");

                    b.Property<DateTime>("StartOfContract");

                    b.Property<double>("UsdPerHour");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Workers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Worker");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.CultivationComposite", b =>
                {
                    b.HasBaseType("Farm_ASPCore_Webapi.Models.Cultivation");


                    b.ToTable("CultivationComposite");

                    b.HasDiscriminator().HasValue("CultivationComposite");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.CultivationLeaf", b =>
                {
                    b.HasBaseType("Farm_ASPCore_Webapi.Models.Cultivation");

                    b.Property<int?>("ParentId");

                    b.HasIndex("ParentId");

                    b.ToTable("CultivationLeaf");

                    b.HasDiscriminator().HasValue("CultivationLeaf");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Driver", b =>
                {
                    b.HasBaseType("Farm_ASPCore_Webapi.Models.Worker");


                    b.ToTable("Driver");

                    b.HasDiscriminator().HasValue("Driver");

                    b.HasData(
                        new { Id = 1, BaseSalary = 4349.3, DaysOfWork = 23, EndOfContract = new DateTime(2016, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name0", HoursPerDay = 10, Kind = 0, LastName = "lastname0", Salary = 4349.2999999999993, StartOfContract = new DateTime(2017, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 17.41 },
                        new { Id = 2, BaseSalary = 3170.46, DaysOfWork = 11, EndOfContract = new DateTime(2017, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name1", HoursPerDay = 18, Kind = 0, LastName = "lastname1", Salary = 3170.46, StartOfContract = new DateTime(2016, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 14.27 },
                        new { Id = 3, BaseSalary = 2866.68, DaysOfWork = 28, EndOfContract = new DateTime(2017, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name2", HoursPerDay = 6, Kind = 0, LastName = "lastname2", Salary = 2866.6800000000003, StartOfContract = new DateTime(2016, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 15.01 },
                        new { Id = 4, BaseSalary = 3106.92, DaysOfWork = 28, EndOfContract = new DateTime(2016, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name3", HoursPerDay = 8, Kind = 0, LastName = "lastname3", Salary = 3106.92, StartOfContract = new DateTime(2016, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 12.33 },
                        new { Id = 5, BaseSalary = 397.92, DaysOfWork = 7, EndOfContract = new DateTime(2015, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name4", HoursPerDay = 9, Kind = 0, LastName = "lastname4", Salary = 397.92, StartOfContract = new DateTime(2015, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 0.84 },
                        new { Id = 6, BaseSalary = 1956.72, DaysOfWork = 18, EndOfContract = new DateTime(2015, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name5", HoursPerDay = 22, Kind = 0, LastName = "lastname5", Salary = 1956.72, StartOfContract = new DateTime(2017, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 4.07 },
                        new { Id = 7, BaseSalary = 574.2, DaysOfWork = 4, EndOfContract = new DateTime(2016, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name6", HoursPerDay = 5, Kind = 0, LastName = "lastname6", Salary = 574.2, StartOfContract = new DateTime(2017, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 11.46 },
                        new { Id = 8, BaseSalary = 843.75, DaysOfWork = 15, EndOfContract = new DateTime(2017, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name7", HoursPerDay = 5, Kind = 0, LastName = "lastname7", Salary = 843.75, StartOfContract = new DateTime(2016, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 6.65 },
                        new { Id = 9, BaseSalary = 841.64, DaysOfWork = 4, EndOfContract = new DateTime(2017, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name8", HoursPerDay = 16, Kind = 0, LastName = "lastname8", Salary = 841.64, StartOfContract = new DateTime(2016, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.76 },
                        new { Id = 10, BaseSalary = 5097.0, DaysOfWork = 30, EndOfContract = new DateTime(2015, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name9", HoursPerDay = 16, Kind = 0, LastName = "lastname9", Salary = 5097.0, StartOfContract = new DateTime(2015, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 9.9 }
                    );
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Farmer", b =>
                {
                    b.HasBaseType("Farm_ASPCore_Webapi.Models.Worker");


                    b.ToTable("Farmer");

                    b.HasDiscriminator().HasValue("Farmer");

                    b.HasData(
                        new { Id = 11, BaseSalary = 797.25, DaysOfWork = 15, EndOfContract = new DateTime(2015, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name10", HoursPerDay = 5, Kind = 1, LastName = "lastname10", Salary = 797.25, StartOfContract = new DateTime(2015, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 2.63 },
                        new { Id = 12, BaseSalary = 1474.2, DaysOfWork = 4, EndOfContract = new DateTime(2016, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name11", HoursPerDay = 15, Kind = 1, LastName = "lastname11", Salary = 1474.2, StartOfContract = new DateTime(2016, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 14.57 },
                        new { Id = 13, BaseSalary = 1350.0, DaysOfWork = 20, EndOfContract = new DateTime(2016, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name12", HoursPerDay = 5, Kind = 1, LastName = "lastname12", Salary = 1350.0, StartOfContract = new DateTime(2016, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.5 },
                        new { Id = 14, BaseSalary = 1800.64, DaysOfWork = 28, EndOfContract = new DateTime(2017, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name13", HoursPerDay = 8, Kind = 1, LastName = "lastname13", Salary = 1800.64, StartOfContract = new DateTime(2016, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 5.36 },
                        new { Id = 15, BaseSalary = 605.1, DaysOfWork = 3, EndOfContract = new DateTime(2015, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name14", HoursPerDay = 5, Kind = 1, LastName = "lastname14", Salary = 605.1, StartOfContract = new DateTime(2017, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 0.34 },
                        new { Id = 16, BaseSalary = 4062.75, DaysOfWork = 25, EndOfContract = new DateTime(2015, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name15", HoursPerDay = 19, Kind = 1, LastName = "lastname15", Salary = 4062.75, StartOfContract = new DateTime(2016, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.29 },
                        new { Id = 17, BaseSalary = 1050.24, DaysOfWork = 3, EndOfContract = new DateTime(2015, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name16", HoursPerDay = 14, Kind = 1, LastName = "lastname16", Salary = 1050.24, StartOfContract = new DateTime(2015, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 10.72 },
                        new { Id = 18, BaseSalary = 899.0, DaysOfWork = 13, EndOfContract = new DateTime(2017, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name17", HoursPerDay = 2, Kind = 1, LastName = "lastname17", Salary = 899.0, StartOfContract = new DateTime(2015, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 11.5 },
                        new { Id = 19, BaseSalary = 1176.0, DaysOfWork = 4, EndOfContract = new DateTime(2015, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name18", HoursPerDay = 10, Kind = 1, LastName = "lastname18", Salary = 1176.0, StartOfContract = new DateTime(2017, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 14.4 },
                        new { Id = 20, BaseSalary = 3438.66, DaysOfWork = 22, EndOfContract = new DateTime(2017, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), FarmId = 1, FirstName = "name19", HoursPerDay = 17, Kind = 1, LastName = "lastname19", Salary = 3438.66, StartOfContract = new DateTime(2016, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), UsdPerHour = 7.59 }
                    );
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Cultivation", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Farm")
                        .WithMany("Cultivations")
                        .HasForeignKey("FarmId1");
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Machine", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Farm", "Farm")
                        .WithMany("Machines")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Stable", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Farm", "Farm")
                        .WithMany("Stables")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.Worker", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Farm", "Farm")
                        .WithMany("Workers")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Farm_ASPCore_Webapi.Models.CultivationLeaf", b =>
                {
                    b.HasOne("Farm_ASPCore_Webapi.Models.Cultivation", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
